%% RAW DATA PM 2.5 IN PRINCE GEORGE PLAZA JAN 2018 TO JAN 2019

clear
close all
clc

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Pearl\Desktop\Edumacation\GEOB 402\Assn_1\pgdata_2.xls
%    Worksheet: pgdata_2
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2019/02/06 15:58:25

%% Import the data
[~, ~, raw] = xlsread('C:\Users\Pearl\Desktop\Edumacation\GEOB 402\Assn_1\pgdata_2.xls','pgdata_2','A5:C9540');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
stringVectors = string(raw(:,[1,3]));
stringVectors(ismissing(stringVectors)) = '';
raw = raw(:,2);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
pgdata2 = table;

%% Allocate imported array to column variable names
pgdata2.Date = stringVectors(:,1);
pgdata2.Time = data(:,1);
pgdata2.PM25 = stringVectors(:,2);

%% Clear temporary variables
clearvars data raw stringVectors R;

%% Matrix formation
%day,month,year,hour,data
formatIn = 'mm/dd/yyyy';
RawMatrix=[];
index= 1;
for n = 1:9528
    allDate = datenum(pgdata2.Date(n),formatIn);
    isvalid = year(allDate) == 2018;
    if isvalid
        RawMatrix(index,1)=day(allDate);
        RawMatrix(index,2)=month(allDate);
        RawMatrix(index,3)=year(allDate);
        RawMatrix(index,4)=pgdata2.Time(n);
        RawMatrix(index,5)=pgdata2.PM25(n);
        index = index+1;
    end
end

%% split by season
winter = [];
spring =[];
summer=[];
fall=[];

for n = 1:length(RawMatrix)
    iswinter = RawMatrix(n,2) == 1 || RawMatrix(n,2) == 2 || RawMatrix(n,2) == 3;
    isspring = RawMatrix(n,2) == 4 || RawMatrix(n,2) == 5 || RawMatrix(n,2) == 6;
    if iswinter
        winter(n,:)=RawMatrix(n,:);
    end
 end

index = 1;
for n = 1:length(RawMatrix)
    isspring = RawMatrix(n,2) == 4 || RawMatrix(n,2) == 5 || RawMatrix(n,2) == 6;
    if isspring
        spring(index,:)=RawMatrix(n,:);
        index = index + 1;
    end
end

index = 1;
for n = 1:length(RawMatrix)
    issummer = RawMatrix(n,2) == 7 || RawMatrix(n,2) == 8 || RawMatrix(n,2) == 9;
    if issummer
        summer(index,:)=RawMatrix(n,:);
        index = index + 1;
    end
end

index = 1;
for n = 1:length(RawMatrix)
    isfall = RawMatrix(n,2) == 10 || RawMatrix(n,2) == 11 || RawMatrix(n,2) == 12;
    if isfall
        fall(index,:)=RawMatrix(n,:);
        index = index + 1;
    end
end

%% Split by hour
winterhrs = [];
springhrs =[];
summerhrs=[];
fallhrs=[];

index = 1;
for n = 1:length(winter)-24
    if isnan(winter(n,4))
        winterhrs(index,1) = winter(n,5);
        winterhrs(index,2) = winter(n+1,5);
        winterhrs(index,3) = winter(n+2,5);
        winterhrs(index,4) = winter(n+3,5);
        winterhrs(index,5) = winter(n+4,5);
        winterhrs(index,6) = winter(n+5,5);
        winterhrs(index,7) = winter(n+6,5);
        winterhrs(index,8) = winter(n+7,5);
        winterhrs(index,9) = winter(n+8,5);
        winterhrs(index,10) = winter(n+9,5);
        winterhrs(index,11) = winter(n+10,5);
        winterhrs(index,12) = winter(n+11,5);
        winterhrs(index,13) = winter(n+12,5);
        winterhrs(index,14) = winter(n+13,5);
        winterhrs(index,15) = winter(n+14,5);
        winterhrs(index,16) = winter(n+15,5);
        winterhrs(index,17) = winter(n+16,5);
        winterhrs(index,18) = winter(n+17,5);
        winterhrs(index,19) = winter(n+18,5);
        winterhrs(index,20) = winter(n+19,5);
        winterhrs(index,21) = winter(n+20,5);
        winterhrs(index,22) = winter(n+21,5);
        winterhrs(index,23) = winter(n+22,5);
        winterhrs(index,24) = winter(n+23,5);
        index = index + 1;
    end
end


%% Boxplots